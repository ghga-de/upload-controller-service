# This file was autogenerated, please do not modify.
components:
  schemas:
    FileMetadata:
      description: A model containing all the metadata needed to pass it on to other
        microservices
      properties:
        creation_date:
          format: date-time
          title: Creation Date
          type: string
        current_upload_id:
          description: ID of the current upload. `Null` if no update has been initiated,
            yet.
          title: Current Upload Id
          type: string
        file_id:
          title: File Id
          type: string
        file_name:
          title: File Name
          type: string
        format:
          title: Format
          type: string
        grouping_label:
          title: Grouping Label
          type: string
        md5_checksum:
          title: Md5 Checksum
          type: string
        size:
          title: Size
          type: integer
        update_date:
          format: date-time
          title: Update Date
          type: string
      required:
      - file_id
      - file_name
      - md5_checksum
      - size
      - grouping_label
      - creation_date
      - update_date
      - format
      title: FileMetadata
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    UploadCreation:
      description: Properties required to create a new upload.
      properties:
        file_id:
          description: The ID of the file corresponding to this upload.
          title: File Id
          type: integer
      required:
      - file_id
      title: Properties required to create a new upload
      type: object
    UploadDetails:
      description: Details returned upon creation of a new multipart upload.
      properties:
        file_id:
          description: The ID of the file corresponding to this upload.
          title: File Id
          type: integer
        part_size:
          description: Part size to be used for upload. Specified in bytes.
          title: Part Size
          type: integer
        upload_id:
          title: Upload Id
          type: string
      required:
      - file_id
      - upload_id
      - part_size
      title: Multi-Part Upload Details
      type: object
    UploadUpdate:
      description: Request body to update an existing mutli-part upload.
      properties:
        status:
          enum:
          - uploaded
          - cancelled
          title: Status
          type: string
      required:
      - status
      title: Multi-Part Upload Update
      type: object
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.0.2
paths:
  /files/{file_id}:
    get:
      description: Get file metadata including the current upload attempt.
      operationId: getFileMetadata
      parameters:
      - in: path
        name: file_id
        required: true
        schema:
          title: File Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
          description: File metadata including the current upload attempt
        '403':
          description: The user is not registered as a Data Submitter for the corresponding
            file.
        '404':
          description: The file with the given ID has not (yet) been registered for
            upload.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get file metadata including the current upload attempt.
  /health:
    get:
      description: Used to test if this service is alive
      operationId: health_health_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: health
  /uploads/{upload_id}:
    get:
      description: Get details on a specific upload.
      operationId: getUploadDetails
      parameters:
      - in: path
        name: upload_id
        required: true
        schema:
          title: Upload Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDetails'
          description: Details on a specific upload.
        '403':
          description: The user is not registered as a Data Submitter for the file
            corresponding to this multi-part upload.
        '404':
          description: The multi-part upload with the given ID does not exist.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get details on a specific upload.
    patch:
      description: 'Declare a multi-part upload as complete by setting its status
        to "uploaded".

        Or cancel a multi-part upload by setting its status to "cancelled".'
      operationId: updateUploadStatus
      parameters:
      - in: path
        name: upload_id
        required: true
        schema:
          title: Upload Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadUpdate'
        required: true
      responses:
        '204':
          description: Multi-part upload successfully updated.
        '400':
          description: The provided status value was invalid or the status of this
            multi-part upload currently or permanently can't be changed.
        '403':
          description: The user is not registered as a Data Submitter for the file
            corresponding to this multi-part upload.
        '404':
          description: The multi-part upload with the given ID does not exist.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update the status of an existing multi-part upload.
  /uploads/{upload_id}/parts/{part_no}/signed_urls:
    post:
      description: 'Create a pre-signed URL for the specified part number of the specified
        multi-part

        upload.'
      operationId: createPreSignedURL
      parameters:
      - in: path
        name: upload_id
        required: true
        schema:
          title: Upload Id
          type: string
      - in: path
        name: part_no
        required: true
        schema:
          maximum: 10000.0
          minimum: 1.0
          title: Part No
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                description: To be defined in further detail.
                type: object
          description: The newly created pre-signed POST.
        '403':
          description: The user is not registered as a Data Submitter for the file
            corresponding to this multi-part upload.
        '404':
          description: The multi-part upload with the given ID does not exist.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create new pre-signed URL for a specific part.
  uploads:
    post:
      description: Initiate a new mutli-part upload for the given file.
      operationId: createUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadCreation'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDetails'
          description: Details on the newly created upload.
        '400':
          description:
          - It is currently not possible to create a new upload for the file with
            the specified ID because another upload for that file is already active
            or has been accepted (its status is not "failed" "cancelled", or "rejected").
        '403':
          description: The user is not registered as a Data Submitter for the corresponding
            file.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Initiate a new multi-part upload.
