# This file was autogenerated, please do not modify.
components:
  schemas:
    FileInfoPatchState:
      description: A model containing all the metadata needed to perform a patch on
        an orm field
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/UploadState'
          default: registered
      title: FileInfoPatchState
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    UploadState:
      description: 'The current upload state. Can be registered (no information),

        pending (the user has requested an upload url),

        uploaded (the user has confirmed the upload),

        or registered (the file has been registered with the internal-file-registry).'
      enum:
      - registered
      - pending
      - uploaded
      - completed
      title: UploadState
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.0.2
paths:
  /confirm_upload/{file_id}:
    patch:
      description: "Requesting a confirmation of the upload of a specific file using\
        \ the file id.\nReturns:\n    204 - if the file is registered and its content\
        \ is in the inbox\n    400 - if there is a bad request\n    404 - if the file\
        \ is unkown"
      operationId: patch_confirm_upload_confirm_upload__file_id__patch
      parameters:
      - in: path
        name: file_id
        required: true
        schema:
          title: File Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileInfoPatchState'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: confirm_upload
  /health:
    get:
      description: Used to test if this service is alive
      operationId: health_health_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: health
  /presigned_post/{file_id}:
    get:
      description: 'Requesting a pre-signed post URL for a new file in the inbox

        using the file_id representing the file.'
      operationId: get_presigned_post_presigned_post__file_id__get
      parameters:
      - in: path
        name: file_id
        required: true
        schema:
          title: File Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: presigned_post
