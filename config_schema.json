{
  "additionalProperties": false,
  "description": "Modifies the orginal Settings class provided by the user",
  "properties": {
    "upload_received_event_topic": {
      "description": "Name of the topic to publish events that inform about new file uploads.",
      "examples": [
        "file_uploads"
      ],
      "title": "Upload Received Event Topic",
      "type": "string"
    },
    "upload_received_event_type": {
      "description": "The type to use for event that inform about new file uploads.",
      "examples": [
        "file_upload_received"
      ],
      "title": "Upload Received Event Type",
      "type": "string"
    },
    "file_metadata_event_topic": {
      "description": "Name of the topic to receive new or changed metadata on files that shall be registered for uploaded.",
      "examples": [
        "metadata"
      ],
      "title": "File Metadata Event Topic",
      "type": "string"
    },
    "file_metadata_event_type": {
      "description": "The type used for events to receive new or changed metadata on files that are expected to be uploaded.",
      "examples": [
        "file_metadata_upserts"
      ],
      "title": "File Metadata Event Type",
      "type": "string"
    },
    "upload_accepted_event_topic": {
      "description": "Name of the topic to receive event that indicate that an upload was by downstream services.",
      "examples": [
        "internal_file_registry"
      ],
      "title": "Upload Accepted Event Topic",
      "type": "string"
    },
    "upload_accepted_event_type": {
      "description": "The type used for event that indicate that an upload was by downstream services.",
      "examples": [
        "file_registered"
      ],
      "title": "Upload Accepted Event Type",
      "type": "string"
    },
    "upload_rejected_event_topic": {
      "description": "Name of the topic used for events informing about rejection of an upload by downstream services due to validation failure.",
      "examples": [
        "file_interrogation"
      ],
      "title": "Upload Rejected Event Topic",
      "type": "string"
    },
    "upload_rejected_event_type": {
      "description": "The type used for events informing about the failure of a file validation.",
      "examples": [
        "file_validation_failure"
      ],
      "title": "Upload Rejected Event Type",
      "type": "string"
    },
    "inbox_bucket": {
      "default": "inbox",
      "title": "Inbox Bucket",
      "type": "string"
    },
    "service_name": {
      "default": "upload_controller_service",
      "title": "Service Name",
      "type": "string"
    },
    "service_instance_id": {
      "description": "A string that uniquely identifies this instance across all instances of this service. A globally unique Kafka client ID will be created by concatenating the service_name and the service_instance_id.",
      "examples": [
        "germany-bw-instance-001"
      ],
      "title": "Service Instance Id",
      "type": "string"
    },
    "kafka_servers": {
      "description": "A list of connection strings to connect to Kafka bootstrap servers.",
      "examples": [
        [
          "localhost:9092"
        ]
      ],
      "items": {
        "type": "string"
      },
      "title": "Kafka Servers",
      "type": "array"
    },
    "s3_endpoint_url": {
      "description": "URL to the S3 API.",
      "examples": [
        "http://localhost:4566"
      ],
      "title": "S3 Endpoint Url",
      "type": "string"
    },
    "s3_access_key_id": {
      "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
      "examples": [
        "my-access-key-id"
      ],
      "title": "S3 Access Key Id",
      "type": "string"
    },
    "s3_secret_access_key": {
      "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
      "examples": [
        "my-secret-access-key"
      ],
      "format": "password",
      "title": "S3 Secret Access Key",
      "type": "string",
      "writeOnly": true
    },
    "s3_session_token": {
      "anyOf": [
        {
          "format": "password",
          "type": "string",
          "writeOnly": true
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
      "examples": [
        "my-session-token"
      ],
      "title": "S3 Session Token"
    },
    "aws_config_ini": {
      "anyOf": [
        {
          "format": "path",
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Path to a config file for specifying more advanced S3 parameters. This should follow the format described here: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html#using-a-configuration-file",
      "examples": [
        "~/.aws/config"
      ],
      "title": "Aws Config Ini"
    },
    "db_connection_str": {
      "description": "MongoDB connection string. Might include credentials. For more information see: https://naiveskill.com/mongodb-connection-string/",
      "examples": [
        "mongodb://localhost:27017"
      ],
      "format": "password",
      "title": "Db Connection Str",
      "type": "string",
      "writeOnly": true
    },
    "db_name": {
      "description": "Name of the database located on the MongoDB server.",
      "examples": [
        "my-database"
      ],
      "title": "Db Name",
      "type": "string"
    },
    "host": {
      "default": "127.0.0.1",
      "description": "IP of the host.",
      "title": "Host",
      "type": "string"
    },
    "port": {
      "default": 8080,
      "description": "Port to expose the server on the specified host",
      "title": "Port",
      "type": "integer"
    },
    "log_level": {
      "default": "info",
      "description": "Controls the verbosity of the log.",
      "enum": [
        "critical",
        "error",
        "warning",
        "info",
        "debug",
        "trace"
      ],
      "title": "Log Level",
      "type": "string"
    },
    "auto_reload": {
      "default": false,
      "description": "A development feature. Set to `True` to automatically reload the server upon code changes",
      "title": "Auto Reload",
      "type": "boolean"
    },
    "workers": {
      "default": 1,
      "description": "Number of workers processes to run.",
      "title": "Workers",
      "type": "integer"
    },
    "api_root_path": {
      "default": "/",
      "description": "Root path at which the API is reachable. This is relative to the specified host and port.",
      "title": "Api Root Path",
      "type": "string"
    },
    "openapi_url": {
      "default": "/openapi.json",
      "description": "Path to get the openapi specification in JSON format. This is relative to the specified host and port.",
      "title": "Openapi Url",
      "type": "string"
    },
    "docs_url": {
      "default": "/docs",
      "description": "Path to host the swagger documentation. This is relative to the specified host and port.",
      "title": "Docs Url",
      "type": "string"
    },
    "cors_allowed_origins": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of origins that should be permitted to make cross-origin requests. By default, cross-origin requests are not allowed. You can use ['*'] to allow any origin.",
      "examples": [
        [
          "https://example.org",
          "https://www.example.org"
        ]
      ],
      "title": "Cors Allowed Origins"
    },
    "cors_allow_credentials": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Indicate that cookies should be supported for cross-origin requests. Defaults to False. Also, cors_allowed_origins cannot be set to ['*'] for credentials to be allowed. The origins must be explicitly specified.",
      "examples": [
        [
          "https://example.org",
          "https://www.example.org"
        ]
      ],
      "title": "Cors Allow Credentials"
    },
    "cors_allowed_methods": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of HTTP methods that should be allowed for cross-origin requests. Defaults to ['GET']. You can use ['*'] to allow all standard methods.",
      "examples": [
        [
          "*"
        ]
      ],
      "title": "Cors Allowed Methods"
    },
    "cors_allowed_headers": {
      "anyOf": [
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "A list of HTTP request headers that should be supported for cross-origin requests. Defaults to []. You can use ['*'] to allow all headers. The Accept, Accept-Language, Content-Language and Content-Type headers are always allowed for CORS requests.",
      "examples": [
        []
      ],
      "title": "Cors Allowed Headers"
    }
  },
  "required": [
    "upload_received_event_topic",
    "upload_received_event_type",
    "file_metadata_event_topic",
    "file_metadata_event_type",
    "upload_accepted_event_topic",
    "upload_accepted_event_type",
    "upload_rejected_event_topic",
    "upload_rejected_event_type",
    "service_instance_id",
    "kafka_servers",
    "s3_endpoint_url",
    "s3_access_key_id",
    "s3_secret_access_key",
    "db_connection_str",
    "db_name"
  ],
  "title": "ModSettings",
  "type": "object"
}