{
  "title": "ModSettings",
  "description": "Modifies the orginal Settings class provided by the user",
  "type": "object",
  "properties": {
    "s3_endpoint_url": {
      "title": "S3 Endpoint Url",
      "description": "URL to the S3 API.",
      "example": "http://localhost:4566",
      "env_names": [
        "ucs_s3_endpoint_url"
      ],
      "type": "string"
    },
    "s3_access_key_id": {
      "title": "S3 Access Key Id",
      "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
      "example": "my-access-key-id",
      "env_names": [
        "ucs_s3_access_key_id"
      ],
      "type": "string"
    },
    "s3_secret_access_key": {
      "title": "S3 Secret Access Key",
      "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
      "example": "my-secret-access-key",
      "env_names": [
        "ucs_s3_secret_access_key"
      ],
      "type": "string"
    },
    "s3_session_token": {
      "title": "S3 Session Token",
      "description": "Part of credentials for login into the S3 service. See: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/credentials.html",
      "example": "my-session-token",
      "env_names": [
        "ucs_s3_session_token"
      ],
      "type": "string"
    },
    "aws_config_ini": {
      "title": "Aws Config Ini",
      "description": "Path to a config file for specifying more advanced S3 parameters. This should follow the format described here: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html#using-a-configuration-file",
      "example": "~/.aws/config",
      "env_names": [
        "ucs_aws_config_ini"
      ],
      "type": "string",
      "format": "path"
    },
    "db_url": {
      "title": "Db Url",
      "description": "A URL to a PostgreSQL database.",
      "example": "postgresql://user:password@mydbserver/dbname",
      "env_names": [
        "ucs_db_url"
      ],
      "type": "string"
    },
    "db_print_logs": {
      "title": "Db Print Logs",
      "description": "Print DB/ORM logs.",
      "default": false,
      "env_names": [
        "ucs_db_print_logs"
      ],
      "type": "boolean"
    },
    "service_name": {
      "title": "Service Name",
      "default": "upload_controller_service",
      "env_names": [
        "ucs_service_name"
      ],
      "type": "string"
    },
    "rabbitmq_host": {
      "title": "Rabbitmq Host",
      "description": "Name or IP address of the host running the RabbitMQ broker.",
      "example": "rabbitmq",
      "env_names": [
        "ucs_rabbitmq_host"
      ],
      "type": "string"
    },
    "rabbitmq_port": {
      "title": "Rabbitmq Port",
      "description": "Port of the RabbitMQ broker running on the specified host.",
      "default": 5672,
      "env_names": [
        "ucs_rabbitmq_port"
      ],
      "type": "integer"
    },
    "host": {
      "title": "Host",
      "description": "IP of the host.",
      "default": "127.0.0.1",
      "env_names": [
        "ucs_host"
      ],
      "type": "string"
    },
    "port": {
      "title": "Port",
      "description": "Port to expose the server on the specified host",
      "default": 8080,
      "env_names": [
        "ucs_port"
      ],
      "type": "integer"
    },
    "log_level": {
      "title": "Log Level",
      "description": "Controls the verbosity of the log.",
      "default": "info",
      "env_names": [
        "ucs_log_level"
      ],
      "enum": [
        "critical",
        "error",
        "warning",
        "info",
        "debug",
        "trace"
      ],
      "type": "string"
    },
    "auto_reload": {
      "title": "Auto Reload",
      "description": "A development feature. Set to `True` to automatically reload the server upon code changes",
      "default": false,
      "env_names": [
        "ucs_auto_reload"
      ],
      "type": "boolean"
    },
    "workers": {
      "title": "Workers",
      "description": "Number of workers processes to run.",
      "default": 1,
      "env_names": [
        "ucs_workers"
      ],
      "type": "integer"
    },
    "api_root_path": {
      "title": "Api Root Path",
      "description": "Root path at which the API is reachable. This is relative to the specified host and port.",
      "default": "/",
      "env_names": [
        "ucs_api_root_path"
      ],
      "type": "string"
    },
    "openapi_url": {
      "title": "Openapi Url",
      "description": "Path to get the openapi specification in JSON format. This is relative to the specified host and port.",
      "default": "/openapi.json",
      "env_names": [
        "ucs_openapi_url"
      ],
      "type": "string"
    },
    "docs_url": {
      "title": "Docs Url",
      "description": "Path to host the swagger documentation. This is relative to the specified host and port.",
      "default": "/docs",
      "env_names": [
        "ucs_docs_url"
      ],
      "type": "string"
    },
    "cors_allowed_origins": {
      "title": "Cors Allowed Origins",
      "description": "A list of origins that should be permitted to make cross-origin requests. By default, cross-origin requests are not allowed. You can use ['*'] to allow any origin.",
      "example": [
        "https://example.org",
        "https://www.example.org"
      ],
      "env_names": [
        "ucs_cors_allowed_origins"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "cors_allow_credentials": {
      "title": "Cors Allow Credentials",
      "description": "Indicate that cookies should be supported for cross-origin requests. Defaults to False. Also, cors_allowed_origins cannot be set to ['*'] for credentials to be allowed. The origins must be explicitly specified.",
      "example": [
        "https://example.org",
        "https://www.example.org"
      ],
      "env_names": [
        "ucs_cors_allow_credentials"
      ],
      "type": "boolean"
    },
    "cors_allowed_methods": {
      "title": "Cors Allowed Methods",
      "description": "A list of HTTP methods that should be allowed for cross-origin requests. Defaults to ['GET']. You can use ['*'] to allow all standard methods.",
      "example": [
        "*"
      ],
      "env_names": [
        "ucs_cors_allowed_methods"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "cors_allowed_headers": {
      "title": "Cors Allowed Headers",
      "description": "A list of HTTP request headers that should be supported for cross-origin requests. Defaults to []. You can use ['*'] to allow all headers. The Accept, Accept-Language, Content-Language and Content-Type headers are always allowed for CORS requests.",
      "example": [],
      "env_names": [
        "ucs_cors_allowed_headers"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "s3_inbox_bucket_id": {
      "title": "S3 Inbox Bucket Id",
      "default": "inbox",
      "env_names": [
        "ucs_s3_inbox_bucket_id"
      ],
      "type": "string"
    },
    "topic_file_accepted": {
      "title": "Topic File Accepted",
      "default": "file_internally_registered",
      "env_names": [
        "ucs_topic_file_accepted"
      ],
      "type": "string"
    },
    "topic_new_study": {
      "title": "Topic New Study",
      "default": "new_study_created",
      "env_names": [
        "ucs_topic_new_study"
      ],
      "type": "string"
    },
    "topic_upload_received": {
      "title": "Topic Upload Received",
      "default": "file_upload_received",
      "env_names": [
        "ucs_topic_upload_received"
      ],
      "type": "string"
    }
  },
  "required": [
    "s3_endpoint_url",
    "s3_access_key_id",
    "s3_secret_access_key",
    "db_url",
    "rabbitmq_host"
  ],
  "additionalProperties": false
}