version: '3'

services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        # [Choice] Python version: 3, 3.8, 3.7, 3.6
        VARIANT: 3.9
        # [Choice] Install Node.js
        INSTALL_NODE: "true"
        NODE_VERSION: "lts/*"
        PACKAGE_NAME: "upload_controller_service"
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        USER_UID: 1000
        USER_GID: 1000

    init: true
    privileged: true

    volumes:
      - ..:/workspace:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:postgresql

    # Uncomment the next line to use a non-root user for all processes.
    user: vscode

    # define environment variables
    environment:
      ULC_CONFIG_YAML: /workspace/.devcontainer/.dev_config.yaml
      DB_URL: postgresql://admin:admin@postgresql/inbox
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  postgresql:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - type: volume
        source: postgres_fs
        target: /var/lib/postgresql/data
        volume:
          nocopy: true
    environment:
      POSTGRES_USER: admin
      POSTGRES_DB: inbox
      POSTGRES_PASSWORD: admin

    command: [ 'postgres', '-c', 'work_mem=512MB' ]
    deploy:
      endpoint_mode: dnsrr

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672

  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566"
    environment:
      SERVICES: s3
      DEFAULT_REGION: eu-west-1
      AWS_DEFAULT_REGION: eu-west-1
      # accessible at localhost
      HOSTNAME_EXTERNAL: localhost
      USE_SSL: "false"
      DATA_DIR: /tmp/localstack/data
      DEBUG: 1
    volumes:
      - type: volume
        source: s3_fs
        target: /tmp/localstack
        volume:
          nocopy: true

volumes:
  postgres_fs: {}
  s3_fs: {}
